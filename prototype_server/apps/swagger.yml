# swagger.yml

openapi: 3.0.0
info:
  title: "Waterboy Flask REST API"
  description: "An API for automated plant irrigation"
  version: "1.0.0"

servers:
  - url: "/api"

components:
  schemas:
    Measure:
      type: "object"
      required:
        - measure_name
      properties:
        measure_name:
          type: "string"
        measure_units:
          type: "string"
    Plant:
      type: "object"
      required:
        - plant_name
      properties:
        plant_name:
          type: "string"
        genus:
          type: "string"
        species:
          type: "string"
        dry_hours:
          type: "number"
        pump_time:
          type: "number"
    Value:
      type: "object"
      required:
        - plant_name
        - measure_name
      properties:
        plant_name:
          type: "string"
        measure_name:
          type: "string"
        value:
          type: "number"

  parameters:
    measure_name:
      name: "measure_name"
      description: "Name of measure to get"
      in: path
      required: True
      schema:
        type: "string"
    plant_name:
      name: "plant_name"
      description: "Name of plant to get"
      in: path
      required: True
      schema:
        type: "string"
    value:
      name: "value"
      description: "Value of trace"
      in: path
      required: True
      schema:
        type: "string"

paths:
  /plant:
    get:
      operationId: "plants.read_all"
      tags:
        - Plants
      summary: "Read the list of plants"
      responses:
        "200":
          description: "Successfully read plant list"
    post:
      operationId: "plants.create"
      tags:
        - Plants
      summary: "Create a plant"
      requestBody:
        description: "Plant to create"
        required: True
        content:
          application/json:
            schema:
              x-body-name: "plant"
              $ref: "#/components/schemas/Plant"
      responses:
        "201":
          description: "Successfully created a plant"
  /plant/{plant_name}:
    get:
      tags:
        - Plants
      operationId: "plants.get"
      summary: "Get a plant"
      parameters:
        - $ref: "#/components/parameters/plant_name"
      responses:
        "200":
          description: "Successfully retrieved plant"
    put:
      tags:
        - Plants
      operationId: "plants.update"
      summary: "Update a plant"
      parameters:
        - $ref: "#/components/parameters/plant_name"
      responses:
        "201":
          description: "Successfully updated plant"
      requestBody:
        content:
          application/json:
            schema:
              x-body-name: "plant"
              $ref: "#/components/schemas/Plant"
    delete:
      tags:
        - Plants
      operationId: "plants.delete"
      summary: "Delete a plant"
      parameters:
        - $ref: "#/components/parameters/plant_name"
      responses:
        "204":
          description: "Successfully deleted a plant"
  /trace:
    post:
      tags:
        - Traces
      operationId: "traces.create"
      summary: "Add value to trace"
      requestBody:
        description: "Value to add"
        required: True
        content:
          application/json:
            schema:
              x-body-name: "value"
              $ref: "#/components/schemas/Value"
      responses:
        "201":
          description: "Successfully added trace value"
        